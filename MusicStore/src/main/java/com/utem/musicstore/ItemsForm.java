/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.utem.musicstore;

import java.awt.Color;
import javax.swing.JOptionPane;
import java.io.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
import java.text.*;
/**
 *
 * @author User
 */
public class ItemsForm extends javax.swing.JFrame {
    
    // declare object for class AddNewProduct to use methods for dealing with database
    private ConnectionData itemsCon = new ConnectionData();
    // declare object for class AddNewProduct to use methods for dealing with database
    private ConnectionData categoryCon = new ConnectionData();
    // declare object for class ItemManager to use methods for dealing with database
    private ConnectionData userCon = new ConnectionData();
    
    // declare object for class Item to set and get values of Item
    private Items items;
    // declare object for class Item to set and get values of Item
    private Category category;
    // declare object for class Customer to set and get values of Item
    private User user;
    
    private static ArrayList <Items> itemsList;
    private static ArrayList <Category> categoryList;
    private static ArrayList <User> userList;
    
    /**
     * Creates new form Items
     */
    public ItemsForm() {
        initComponents();
        itemsCon.ID_item();
        
        // Call method readAll() to fetch all data from database
        categoryList = categoryCon.readAllCategory();
        
        Object rowData[] = new Object[2];
        
        // use repetition structure to read all item attributes of the ArrayList
        // and display the data in the table according to the columns and row
        for(Category x:categoryList){
            comboBoxCategory.addItem(x.getName());
        }
    }
    
    // Method definition: Reset the form
    public void clearForm(){
        itemsCon.ID_item();
        txtTitle.setText("Enter Album Title");
        txtPrice.setText("Enter Price");
        txtQuantity.setText("Enter Quantity");
        labelError.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelExit = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        buttonAdd = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        txtTitle = new javax.swing.JTextField();
        buttonUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboBoxCategory = new javax.swing.JComboBox<>();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        labelError = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCategoryID = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(290, 0));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1070, 780));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelExit.setBackground(new java.awt.Color(255, 255, 255));
        labelExit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelExit.setForeground(new java.awt.Color(75, 0, 130));
        labelExit.setText("X");
        labelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelExitMouseClicked(evt);
            }
        });
        jPanel1.add(labelExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 11, 20, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI Variable", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 0, 130));
        jLabel1.setText("Items");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        tableItem.setBackground(new java.awt.Color(75, 0, 130));
        tableItem.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        tableItem.setForeground(new java.awt.Color(255, 255, 255));
        tableItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Price", "Quantity", "Category"
            }
        ));
        tableItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableItem);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 550, 550));

        buttonAdd.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonAdd.setForeground(new java.awt.Color(75, 0, 130));
        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        buttonAdd.setText("Add");
        buttonAdd.setBorder(null);
        buttonAdd.setBorderPainted(false);
        buttonAdd.setIconTextGap(10);
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        jPanel1.add(buttonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 490, 110, 40));

        buttonClear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonClear.setForeground(new java.awt.Color(75, 0, 130));
        buttonClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clear.png"))); // NOI18N
        buttonClear.setText("Clear");
        buttonClear.setBorder(null);
        buttonClear.setBorderPainted(false);
        buttonClear.setIconTextGap(10);
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });
        jPanel1.add(buttonClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 560, 110, 40));

        buttonDelete.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(75, 0, 130));
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        buttonDelete.setText("Delete");
        buttonDelete.setBorder(null);
        buttonDelete.setBorderPainted(false);
        buttonDelete.setIconTextGap(10);
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 560, 110, 40));

        txtID.setEditable(false);
        txtID.setBackground(new java.awt.Color(255, 255, 255));
        txtID.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtID.setForeground(new java.awt.Color(75, 0, 130));
        txtID.setText("Enter ID");
        txtID.setBorder(null);
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 250, 30));

        txtTitle.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtTitle.setForeground(new java.awt.Color(75, 0, 130));
        txtTitle.setText("Enter Album Title");
        txtTitle.setBorder(null);
        txtTitle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTitleFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTitleFocusLost(evt);
            }
        });
        jPanel1.add(txtTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 250, 30));

        buttonUpdate.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonUpdate.setForeground(new java.awt.Color(75, 0, 130));
        buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/update.png"))); // NOI18N
        buttonUpdate.setText("Update");
        buttonUpdate.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        buttonUpdate.setBorderPainted(false);
        buttonUpdate.setIconTextGap(10);
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(buttonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 490, 110, 40));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(75, 0, 130));
        jLabel3.setText("Category");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, -1, 30));

        comboBoxCategory.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        comboBoxCategory.setForeground(new java.awt.Color(75, 0, 130));
        comboBoxCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxCategoryItemStateChanged(evt);
            }
        });
        jPanel1.add(comboBoxCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 250, 30));

        txtPrice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtPrice.setForeground(new java.awt.Color(75, 0, 130));
        txtPrice.setText("Enter Price");
        txtPrice.setBorder(null);
        txtPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPriceFocusLost(evt);
            }
        });
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 250, 30));

        txtQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtQuantity.setForeground(new java.awt.Color(75, 0, 130));
        txtQuantity.setText("Enter Quantity");
        txtQuantity.setBorder(null);
        txtQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantityFocusLost(evt);
            }
        });
        jPanel1.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 250, 30));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(75, 0, 130));
        jLabel4.setText("Title");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(75, 0, 130));
        jLabel5.setText("Price");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(75, 0, 130));
        jLabel6.setText("Quantity");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 250, 10));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 250, 10));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 250, 10));

        labelError.setFont(new java.awt.Font("Segoe UI Variable", 1, 11)); // NOI18N
        labelError.setForeground(new java.awt.Color(102, 102, 102));
        jPanel1.add(labelError, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 620, 260, 40));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(75, 0, 130));
        jLabel7.setText("ID");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        txtCategoryID.setEditable(false);
        jPanel1.add(txtCategoryID, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, 40, 30));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 250, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void labelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelExitMouseClicked
        // Close form
        setVisible(false);
    }//GEN-LAST:event_labelExitMouseClicked

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        String itemID = txtID.getText();
        String title = txtTitle.getText();
        String price = txtPrice.getText();
        String quantity = txtQuantity.getText();
        
        // Check wether the form are completed or empty
        if(!itemID.equals("Enter ID") && !title.equals("Enter Album Title") && !price.equals("Enter Price") && !quantity.equals("Enter Quantity"))
        {
            items = new Items();
            
            items.setTitle(txtTitle.getText().trim());
            items.setPrice(txtPrice.getText().trim());
            items.setQuantity(txtQuantity.getText().trim());
            items.setCategoryID(txtCategoryID.getText().trim());

            // call method to update the car based on car register id
            itemsCon.updateItems(txtID.getText().trim(), items);
            userCon.countAllItems();
            userCon.countAllQuantity();
            
            // message to inform user
            JOptionPane.showMessageDialog(null, "The item has been updated!");

            setVisible(false);
            new ItemsForm().setVisible(true);
        }
        else if(itemID.equals("Enter ID") && title.equals("Enter Album Title") && price.equals("Enter Price") && quantity.equals("Enter Quantity"))
        {
            labelError.setText("Fields are empty!");
        }
        else if(itemID.equals("Enter ID"))
        {
            labelError.setText("ID is empty!");
        }
        else if(title.equals("Enter Album Title"))
        {
            labelError.setText("Title is empty!");
        }
        else if(price.equals("Enter Price"))
        {
            labelError.setText("Price is empty!");
        }
        else
        {
            labelError.setText("Quantity is empty!");
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        String itemID = txtID.getText();
        String title = txtTitle.getText();
        String price = txtPrice.getText();
        String quantity = txtQuantity.getText();
        
        // Check wether the form are completed or empty
        if(!itemID.equals("Enter ID") && !title.equals("Enter Album Title") && !price.equals("Enter Price") && !quantity.equals("Enter Quantity"))
        {
            JOptionPane.showMessageDialog(null, "Successfully saved.");
            items = new Items();
            
            items.setItemID(txtID.getText().trim());
            items.setTitle(txtTitle.getText().trim());
            items.setPrice(txtPrice.getText().trim());
            items.setQuantity(txtQuantity.getText().trim());
            items.setCategoryID(txtCategoryID.getText().trim());


            // call method to add
            itemsCon.addItems(items);
            userCon.countAllItems();
            userCon.countAllQuantity();
            
            itemsCon.ID_item();

            setVisible(false);
            new ItemsForm().setVisible(true);
        }
        else if(itemID.equals("Enter ID") && title.equals("Enter Album Title") && price.equals("Enter Price") && quantity.equals("Enter Quantity"))
        {
            labelError.setText("Fields are empty!");
        }
        else if(itemID.equals("Enter ID"))
        {
            labelError.setText("ID is empty!");
        }
        else if(title.equals("Enter Album Title"))
        {
            labelError.setText("Title is empty!");
        }
        else if(price.equals("Enter Price"))
        {
            labelError.setText("Price is empty!");
        }
        else
        {
            labelError.setText("Quantity is empty!");
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        String itemID = txtID.getText();
        String title = txtTitle.getText();
        String price = txtPrice.getText();
        String quantity = txtQuantity.getText();
        
        // Check wether the form are completed or empty
        if(!itemID.equals("Enter ID") && !title.equals("Enter Album Title") && !price.equals("Enter Price") && !quantity.equals("Enter Quantity"))
        {
            // Display confirmation message box to delete the item
            int result = JOptionPane.showConfirmDialog(null, "Are you sure to delete the item?", "Delete Item",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (result == JOptionPane.YES_OPTION) {

                //call method to delete the category based on category number
                itemsCon.deleteItems(txtID.getText().trim());
                userCon.countAllItems();
                userCon.countAllQuantity();

                // Reset the form
                setVisible(false);
                new ItemsForm().setVisible(true);
            }
        }
        else if(itemID.equals("Enter ID") && title.equals("Enter Album Title") && price.equals("Enter Price") && quantity.equals("Enter Quantity"))
        {
            labelError.setText("Fields are empty!");
        }
        else if(itemID.equals("Enter ID"))
        {
            labelError.setText("ID is empty!");
        }
        else if(title.equals("Enter Album Title"))
        {
            labelError.setText("Title is empty!");
        }
        else if(price.equals("Enter Price"))
        {
            labelError.setText("Price is empty!");
        }
        else
        {
            labelError.setText("Quantity is empty!");
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        // Call method to reset the form
        clearForm();
    }//GEN-LAST:event_buttonClearActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        itemsCon.readAllItems();
    }//GEN-LAST:event_formComponentShown

    private void tableItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemMouseClicked
        int index = tableItem.getSelectedRow();
        TableModel model = tableItem.getModel();
        String itemID = model.getValueAt(index, 0).toString();
        txtID.setText(itemID);
        String title = model.getValueAt(index, 1).toString();
        txtTitle.setText(title);
        String price = model.getValueAt (index, 2).toString();
        txtPrice.setText(price);
        String quantity = model.getValueAt (index, 3).toString();
        txtQuantity.setText(quantity);
        String category = model.getValueAt(index, 4).toString();
        
        comboBoxCategory.removeAllItems();
        comboBoxCategory.addItem(category);
        // Call method readAll() to fetch all data from database
        ArrayList<Category> categoryList = categoryCon.readAllCategory();
        
        Iterator<Category> categoryItr = categoryList.iterator();
        
        // use repetition structure to read all item attributes of the ArrayList
        // and display the data in the table according to the columns and row
        while(categoryItr.hasNext()){
            Category x = categoryItr.next();
            if(!x.getName().equals(category))
                comboBoxCategory.addItem(x.getName());
        }
    }//GEN-LAST:event_tableItemMouseClicked

    private void txtTitleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTitleFocusGained
        if (txtTitle.getText().equals("Enter Album Title"))
        {
            txtTitle.setText("");
        }
    }//GEN-LAST:event_txtTitleFocusGained

    private void txtTitleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTitleFocusLost
        if (txtTitle.getText().equals(""))
        {
            txtTitle.setText("Enter Album Title");
        }
    }//GEN-LAST:event_txtTitleFocusLost

    private void txtPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusGained
        if (txtPrice.getText().equals("Enter Price"))
        {
            txtPrice.setText("");
        }
    }//GEN-LAST:event_txtPriceFocusGained

    private void txtPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusLost
        if (txtPrice.getText().equals(""))
        {
            txtPrice.setText("Enter Price");
        }
    }//GEN-LAST:event_txtPriceFocusLost

    private void txtQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusGained
        if (txtQuantity.getText().equals("Enter Quantity"))
        {
            txtQuantity.setText("");
        }
    }//GEN-LAST:event_txtQuantityFocusGained

    private void txtQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusLost
        if (txtQuantity.getText().equals(""))
        {
            txtQuantity.setText("Enter Quantity");
        }
    }//GEN-LAST:event_txtQuantityFocusLost

    private void comboBoxCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxCategoryItemStateChanged
        String categoryName = (String)comboBoxCategory.getSelectedItem();
        Category category = categoryCon.getCategoryByName(categoryName);
        txtCategoryID.setText(category.getCategoryID());
    }//GEN-LAST:event_comboBoxCategoryItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JComboBox<String> comboBoxCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel labelError;
    private javax.swing.JLabel labelExit;
    public static final javax.swing.JTable tableItem = new javax.swing.JTable();
    private javax.swing.JTextField txtCategoryID;
    public static final javax.swing.JTextField txtID = new javax.swing.JTextField();
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
